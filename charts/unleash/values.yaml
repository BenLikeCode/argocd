ingress:
    enabled: true
    annotations: {}
    entryPoints: web
    middlewares: []
    port: 4242
    
unleash:
  affinity: {}
  configMaps: {}
  containerPort: 4242
  dbConfig:
    database: unleash
    schema: ""
    host: postgres
    pass: unleash
    port: 5432
    useExistingSecret:
      name: ""
      key: ""
    user: unleash

  databaseSecrets: []
  env: []
  existingSecrets: []

  fullnameOverride: ""
  image:
    repository: unleashorg/unleash-server
    tag:
    pullPolicy: Always
  imagePullSecrets: []
  serviceAccount:
    create: true
    annotations: {}
    name: ""

  ingress:
    enabled: false
    className: ""
    annotations: {}
    labels: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

  initContainers: []
  extraContainers: []

  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    timeoutSeconds: 10

  nameOverride: ""
  nodeSelector: {}
  deploymentAnnotations: {}
  podAnnotations: {}

  readinessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    timeoutSeconds: 10
    periodSeconds: 10
    successThreshold: 5

  replicaCount: 2
  resources: {}

  secrets: {}

  service:
    type: ClusterIP
    port: 4242
    targetPort: ""
    nodePort: ""
    annotations: {}
    loadBalancerSourceRanges: []
    loadBalancerIP: ""

  tolerations: []

  vpa:
    enabled: false

  postgresql:
    enabled: true
    fullnameOverride: "unleash-postgresql"
    auth:
      username: unleash
      password: unleash
      database: unleash

  podSecurityContext: {}
  securityContext: {}

  autoscaling:
    enabled: false
    minReplicas: 0
    maxReplicas: 0
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 70

  extraObjects: []

  cloudsql:
    enabled: false
    instance: ""
    image:
      repository: gcr.io/cloudsql-docker/gce-proxy
      tag: 1.32.0
      pullPolicy: IfNotPresent
    resources: {}
    flags: []

  podDisruptionBudget:
    enabled: false
    minAvailable:
    maxUnavailable: 1

  topologySpreadConstraints: {}

  volumes: []
  volumeMounts: []
