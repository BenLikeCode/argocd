apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "skyvern.fullname" . }}
  labels:
    {{- include "skyvern.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "skyvern.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        {{- include "skyvern.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.skyvern.image.repository }}:{{ .Values.skyvern.image.tag }}"
          imagePullPolicy: Always
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    sed -i '\#browser_args = \[#a\            "--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",' /app/skyvern/webeye/browser_factory.py

          ports:
            - containerPort: 8000
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - test
                - -f
                - /app/.streamlit/secrets.toml
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          {{- end }}
          env:
            {{- range $key, $value := .Values.skyvern.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: DATABASE_STRING
              value: postgresql+psycopg://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ template "skyvern.fullname" . }}-postgresql:{{ .Values.postgresql.primary.service.ports.postgresql }}/{{ .Values.postgresql.auth.database }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: openai-api-key
          volumeMounts:
            - name: artifacts
              mountPath: /data/artifacts
            - name: videos
              mountPath: /data/videos
            - name: har
              mountPath: /data/har
            - name: log
              mountPath: /data/log
            - name: streamlit
              mountPath: /app/.streamlit
      volumes:
        - name: artifacts
          persistentVolumeClaim:
            claimName: {{ include "skyvern.fullname" . }}-artifacts
        - name: videos
          persistentVolumeClaim:
            claimName: {{ include "skyvern.fullname" . }}-videos
        - name: har
          persistentVolumeClaim:
            claimName: {{ include "skyvern.fullname" . }}-har
        - name: log
          persistentVolumeClaim:
            claimName: {{ include "skyvern.fullname" . }}-log
        - name: streamlit
          persistentVolumeClaim:
            claimName: {{ include "skyvern.fullname" . }}-streamlit